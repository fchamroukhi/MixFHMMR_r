D[1]
Yk
Yk[1]
Yk[100]
Yk[1000]
data[1]
data[1]
data[100]
Y[100]
Y[1,1:2]
Y[10,1:2]
Y[10,10:11]
Y[10,100:101]
i
j
Y[10,1]
Yij[10,1]
Yij[10,10]
Yij[10,100]
Yij[10,99]
Yij[10,99]
Yij[99,10]
Yij[99]
Yij[990]
mk
z
z[1]
z[100]
sk[100]
sk[10]
sk
param$sigmar
Yij[100]
sk
sk
param$sigmar
regression_param$sigmar
param
param_init
param
param
param$sigmar
param$sigmar
r
param
param_init$sigmar
param
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param
print(p)
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param
rep(0,5)
rep(0,5,5)
matrix(0,5,5,2)
array(data = 0, dim = c(5, 5, 2))
array(data = 0, dim = c(5, 3, 2))
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
gamma_ikjr
dim(gamma_ikjr)
dim(log_w_k_fyi)
dim(exp_num_trans_from_l)
dim(exp_num_trans)
dim(exp_num_trans_from_l_cg)
dim(exp_num_trans_ck)
dim(Li)
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
dim(Li)
Li
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
Li
dim(log_fkr_yij)
Y_i
beta_kr
beta_kr
beta_kr
beta_kr
beta_kr
beta_kr
beta_kr
beta_kr
param$beta_kr[,r,k]
param$beta_kr
rep(1,3)
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
z
log_fkr_yij[r,]
log_fkr_yij[1,]
.Machine$double.xmax
.Machine$double.xmin
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
a=(c(3,1,1),c(2,2,4))
a = rbinc(c(1,1,3), c(2,2,4))
a = rbind(c(1,1,3), c(2,2,4))
a
dim(a)
dim(a,2)
dim(a)[2]
length(a)
matrix(0,2,3)
matrix(0,2,3,2)
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
debugSource("forwards_backwards.R")
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
length(prior)
prior
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$pi_k(,k)
param$pi_k
k
param$pi_k[,k]
param$A_k[,,k]
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
dim(prior)[2]
dim(prior)[2]
dim(prior)
prior
dim(prior)
t(piror)
t(prior)
dim(t(prior))
prior
dim(prior)
ncol(prior)
nrow(prior)
prior
View(f_tk)
prior
ncol(prior)
nrow(prior)
str(prior)
summary(prior)
prior[1]
prior[2]
prior[3]
prior
prior[3][1]
prior[1][1]
prior[1][2]
prior[1][1]
ncol(prior)
dim(prior)
matrix(prior)
dim(matrix(prior))
a=matrix(prior)
prior
dim(t(prior))
dim(prior)
dim(t(t(prior))
)
dim(t(t(prior)))[2]
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
alpha_tk[,1]
f_tk[,t]
f_tk
f_tk/9.3994e-02
f_tk/9.3994
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
z
Y_i
phi
beta_kr
param
param.beta_kr
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
z
beta_kr
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
beta_kr
z
sk
beta_kr
phi %*% beta_kr
t(phi %*% beta_kr) ^ 2
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
z
beta_kr
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
beta_kr
z
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
beta_kr
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
beta_kr
log_fkr_yij
fkr_yij
alpha_tk[,1]
param_norm
param_norm$c
param_norm$1
param_norm$
1
param_norm
alpha_tk[,t]
scale
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$trans_mat
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$trans_mat
# Initialisation de la loi initiale de la variable cachee
param$initial_prob =  c(1,rep(0,R-1))
param_norm
alpha_tk[,t]
scale(t)
scale
t
scale(t)
debugSource('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/init_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
fkr_yij
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
fkr_yij
alpha_tk[,1]
param_norm
rep(1,3)
seq(0,10)
seq(10,0)
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
alpha_tk[,t]
scale1[t]
param_norm
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param_norm
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
alpha_tk[,t-1]
t
t(transmat)
t(transmat)*alpha_tk[,t-1])
t(transmat)*alpha_tk[,t-1]
t(transmat) %*% alpha_tk[,t-1]
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
t(transmat) %*% alpha_tk[,t-1]
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
Qq
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
(t(transmat) %*% alpha_tk[,t-1]) * f_tk[,t]
param_norm
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
t
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$beta_kr
debugSource('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/forwards_backwards.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$sigma_kr
stored_loglik[iter] = loglik
dim(stored_loglik)
stored_loglik
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
((!converge) && iter <= max_iter_EM)
(!converge)
converge
converge
abs((loglik-prev_loglik)/prev_loglik)
abs((loglik-prev_loglik)/prev_loglik) <= threshold
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
converge
converge
abs((loglik-prev_loglik)/prev_loglik) <= threshold
abs((loglik-prev_loglik)/prev_loglik)
loglik-prev_loglik
prev_loglik
(loglik-prev_loglik)
loglik
loglik-Inf
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$sigma_kr
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/learn_MixFHMMR_EM.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$sigma_kr
beta_kr
beta_kr
param$beta_kr
param$beta_kr
beta_kr
fkr_yij
Li[i]
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$sigma_kr
param$beta_kr
beta_kr
sk
tau_tk
prior * f_tk[,t]
sum(A
)
M
param_norm$M
scale1[t]
alpha_tk
z
A
M
M
A
sum(A)
M
M[1] ==1
M[1] <0.1
length(M)
10^-5
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param$sigma_kr
Li[i]
i
param_fb$loglik
param_fb$loglik
param_fb$loglik
param_fb$loglik
fkr_yij
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
Y_i
beta_kr
sigma_kr
z
log_fkr_yij[r,]
log_fkr_yij[r,]
pmin(log_fkr_yij, log(.Machine$double.xmax))
pmax(log_fkr_yij ,log(.Machine$double.xmin))
exp(log_fkr_yij)
T
prior * f_tk[,t]
alpha_tk
alpha_tk
0.97158501+0.02841499
z=sum(A)
(t(transmat) %*% alpha_tk[,t-1]) * f_tk[,t]
(t(transmat) %*% alpha_tk[,t-1]) * f_tk[,t]
param_norm
scale1
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
param
MixFHMMR$model = param
c(as.vector(param.w_k), as.vector(param.A_k), as.vector(param.pi_k),as.vector(param.beta_kr), as.vector(param.sigma_kr))
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
MixFHMMR
MixFHMMR$stats$tau_ik
MixFHMMR$stats$gamma_ikjr
log_w_k_fyi
A=cbind(c(1,1,1),c(2,2,2),c(3,3,3))
A
max(A)
apply(A,2,min)
apply(A,2,max)
apply(A,1,max)
A=cbind(c(1,1,1),c(2,2,2),c(3,4,5))
apply(A,1,max)
apply(A,1,which.max)
A=cbind(c(1,1,11),c(2,12,2),c(3,4,5))
apply(A,1,which.max)
A
rep(1,5)
matrix(1,1,10)
1:10
c(1:10)
dim(c(1:10))
matrix(1:10,1,10)
mmatrix(0,3,5)
matrix(0,3,5)
matrix(1,1,5)
matrix(1,5,1)
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
(matrix(1,1,n) %*% matrix(1:K,1,K))
(matrix(1,1,n)
)
matrix(1:K,1,K))
K
matrix(1:3,1,3))
matrix(1:3,1))
matrix(1:3,1,3)
(matrix(1,n,1)
)
(matrix(1,n,1) %*% matrix(1:K,1,K))
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
Z
dim(Z)
partition_MAP
Z
as.matrix(partition_MAP)
as.numeric(partition_MAP)
partition_MAP * 1
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
mixFHMMR$model$w_k
mixFHMMR$model
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
matplot(t, t(cluster_k), col = couleur[k], type = "l", lty = "dotted", xlab = "Time", ylab = "y")
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
matplot(t, t(data))
plot(t, t(data))
matplot(t, t(data))
matplot(t, t(data),type="b", pch=15:19)
matplot(t, t(data), pch=15:19)
matplot(t, t(data), pch=15:19)
matplot(t, t(data),type="b", pch=NULL)
matplot(t, t(data), pch=NULL)
matplot(t, t(data),type="o", pch=NULL)
matplot(t, t(data),type="o", pch=NULL)
matplot(t, t(data), col = couleur[k], type = "l", lty = "dotted", xlab = "Time", ylab = "y")
matplot(t, t(data), type = "l", lty = "dotted", xlab = "Time", ylab = "y")
matplot(t, t(data), type = "l", xlab = "Time", ylab = "y")
matplot(t, t(data), xlab = "Time", ylab = "y")
matplot(t, t(data), type = "l", xlab = "Time", ylab = "y")
matplot(t, t(data), type = "l", lty = "dotted", xlab = "Time", ylab = "y")
source('~/Cours/GitHub/MixHMMR_R_v1_M2SAAD/Code-R-Complet/main_MixFHMMR.R')
